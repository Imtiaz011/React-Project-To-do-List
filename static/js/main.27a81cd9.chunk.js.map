{"version":3,"sources":["TodoItem.js","TodoInput.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","props","children","done","onClick","onDelete","className","style","color","TodoInput","addOneItem","useState","input","setInput","id","placeholder","type","value","onChange","event","target","TodoList","tasks","setTasks","deleteOneItem","str","newArr","filter","task","content","setItemToTrue","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAe,SAASA,EAASC,GAC7B,IAAQC,EAAsCD,EAAtCC,SAAUC,EAA4BF,EAA5BE,KAAMC,EAAsBH,EAAtBG,QAASC,EAAaJ,EAAbI,SACjC,OACI,qBAAIC,UAAU,WAAWC,MAAO,CAAEC,MAAOL,EAAO,aAAe,OAA/D,UACKD,EACD,wBACIE,QAAS,WAELA,EAAQF,IAHhB,0BAQA,wBACIE,QAAS,WAELC,EAASH,IAHjB,uBCZG,SAASO,EAAUR,GAC9B,IAAQS,EAAeT,EAAfS,WACR,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,MAAO,CACL,uBACEC,GAAG,WACHC,YAAY,WACZC,KAAK,OACLC,MAAOL,EACPM,SAAU,SAACC,GACTN,EAASM,EAAMC,OAAOH,UAG1B,wBAAQH,GAAG,MACTV,QAAS,WACO,KAAVQ,IACFF,EAAWE,GACXC,EAAS,MAJf,kBCTN,SAASQ,IACP,MAA0BV,mBAAS,IAAnC,mBAAOW,EAAP,KAAcC,EAAd,KAMA,SAASC,EAAcC,GACrB,IAAMC,EAASJ,EAAMK,QAAO,SAACC,GAAD,OAAUA,EAAKC,UAAYJ,KACvDF,EAASG,GAGX,SAASI,EAAcL,GACrB,IAAMC,EAASJ,EAAMS,KAAI,SAACH,GACxB,OAAIA,EAAKC,UAAYJ,GACnBG,EAAKzB,MAAQyB,EAAKzB,KACXyB,GAEFA,KAETL,EAASG,GAGX,OACE,gCACE,cAACjB,EAAD,CAAWC,WAtBf,SAAoBe,GAClBF,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEO,QAASJ,EAAKtB,MAAM,SAsBxC,6BACGmB,EAAMS,KAAI,SAACH,GACV,OACE,cAAC5B,EAAD,CACEK,SAAUmB,EACVpB,QAAS0B,EACT3B,KAAMyB,EAAKzB,KAHb,SAKGyB,EAAKC,kBAuBLG,MAff,WACE,OACE,sBAAK1B,UAAU,MAAf,UACE,4CACA,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,cAACe,EAAD,cC1CGY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.27a81cd9.chunk.js","sourcesContent":["export default function TodoItem(props) {\r\n    const { children, done, onClick, onDelete } = props;\r\n    return (\r\n        <li className=\"btn-list\" style={{ color: done ? \"lightgreen\" : \"red\" }}>\r\n            {children}\r\n            <button\r\n                onClick={() => {\r\n                    // logic to change the state\r\n                    onClick(children);\r\n                }}\r\n            >\r\n                ✔️\r\n            </button>\r\n            <button\r\n                onClick={() => {\r\n                    // logic to change the state\r\n                    onDelete(children);\r\n                }}\r\n            >\r\n                ❌\r\n            </button>\r\n        </li>\r\n    );\r\n}","import React,{ useState} from \"react\";\r\nexport default function TodoInput(props) {\r\n    const { addOneItem } = props;\r\n    const [input, setInput] = useState(\"\");\r\n    return [\r\n      <input\r\n        id=\"inputbox\"\r\n        placeholder=\"Add item\"\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(event) => {\r\n          setInput(event.target.value);\r\n        }}\r\n      />,\r\n      <button id=\"add\"\r\n        onClick={() => {\r\n          if (input !== \"\") {\r\n            addOneItem(input);\r\n            setInput(\"\");\r\n          }\r\n        }}\r\n      >\r\n        Add\r\n      </button>\r\n    ];\r\n  }","import './App.css';\r\nimport React, { useState } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport TodoInput from \"./TodoInput\";\r\n\r\nfunction TodoList() {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  function addOneItem(str) {\r\n    setTasks([...tasks, { content: str, done: false }]);\r\n  }\r\n\r\n  function deleteOneItem(str) {\r\n    const newArr = tasks.filter((task) => task.content !== str);\r\n    setTasks(newArr);\r\n  }\r\n\r\n  function setItemToTrue(str) {\r\n    const newArr = tasks.map((task) => {\r\n      if (task.content === str) {\r\n        task.done = !task.done;\r\n        return task;\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(newArr);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <TodoInput addOneItem={addOneItem} />\r\n      <ul>\r\n        {tasks.map((task) => {\r\n          return (\r\n            <TodoItem\r\n              onDelete={deleteOneItem}\r\n              onClick={setItemToTrue}\r\n              done={task.done}\r\n            >\r\n              {task.content}\r\n            </TodoItem>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>To-Do-List</h1>\r\n      <div className=\"App-header\">\r\n        <div className=\"wrapper\">\r\n          <div className=\"Input-wrapper\">\r\n            <TodoList />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}